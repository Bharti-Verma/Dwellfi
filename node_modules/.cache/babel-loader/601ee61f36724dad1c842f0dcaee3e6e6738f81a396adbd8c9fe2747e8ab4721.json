{"ast":null,"code":"import _slicedToArray from \"C:/Users/Mobile Programming/Downloads/Dwellfi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _taggedTemplateLiteral from \"C:/Users/Mobile Programming/Downloads/Dwellfi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mobile Programming\\\\Downloads\\\\Dwellfi\\\\src\\\\continents.jsx\",\n  _templateObject,\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Form from 'react-bootstrap/Form';\nimport TableView from \"./tableView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar LIST_CONTINENTS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query {\\n    continents {\\n      name\\n      countries {\\n        name\\n        languages {\\n          native\\n          name\\n          code\\n        }\\n        phones\\n        emoji\\n        capital\\n        currency\\n      }\\n    }\\n  }\\n\"])));\nexport default function ContinentList() {\n  _s();\n  var _this = this;\n  var _useQuery = useQuery(LIST_CONTINENTS),\n    data = _useQuery.data,\n    loading = _useQuery.loading,\n    error = _useQuery.error;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectContinent = _useState2[0],\n    setSelectContinent = _useState2[1];\n  if (loading || error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error ? error.message : \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  var handleContinentSelect = function handleContinentSelect(e) {\n    // const findData = data.continents.find(continent=>{\n    //   return continent.name\n    //})\n\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-5 mt-3 pt-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Select, {\n              onChange: function onChange(e) {\n                return handleContinentSelect(e);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select Continent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), data.continents.map(function (continent, index) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: continent.name,\n                  children: continent.name\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 27\n                }, _this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: \"0\",\n      children: data.continents.map(function (continent, index) {\n        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: index,\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: continent.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: /*#__PURE__*/_jsxDEV(TableView, {\n              tableData: continent.countries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ContinentList, \"5qZ/NaQXgHv08nJxFXQQ/sVuE8Y=\", false, function () {\n  return [useQuery];\n});\n_c = ContinentList;\nvar _c;\n$RefreshReg$(_c, \"ContinentList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","gql","useQuery","Accordion","Form","TableView","jsxDEV","_jsxDEV","Fragment","_Fragment","LIST_CONTINENTS","_templateObject","_taggedTemplateLiteral","ContinentList","_s","_this","_useQuery","data","loading","error","_useState","_useState2","_slicedToArray","selectContinent","setSelectContinent","children","message","fileName","_jsxFileName","lineNumber","columnNumber","handleContinentSelect","e","console","log","className","Select","onChange","continents","map","continent","index","value","name","defaultActiveKey","Item","eventKey","Header","Body","tableData","countries","_c","$RefreshReg$"],"sources":["C:/Users/Mobile Programming/Downloads/Dwellfi/src/continents.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport TableView from \"./tableView\";\r\nconst LIST_CONTINENTS = gql`\r\n  query {\r\n    continents {\r\n      name\r\n      countries {\r\n        name\r\n        languages {\r\n          native\r\n          name\r\n          code\r\n        }\r\n        phones\r\n        emoji\r\n        capital\r\n        currency\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ContinentList() {\r\n  const { data, loading, error } = useQuery(LIST_CONTINENTS);\r\n  const [selectContinent, setSelectContinent] = useState()\r\n\r\n  if (loading || error) {\r\n    return <p>{error ? error.message : \"Loading...\"}</p>;\r\n  }\r\n\r\n  const handleContinentSelect=(e)=>{\r\n    // const findData = data.continents.find(continent=>{\r\n    //   return continent.name\r\n    //})\r\n\r\n    console.log(data)\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n        <section>\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-5 mt-3 pt-3\">\r\n                  <Form.Select onChange={(e)=>handleContinentSelect(e)}>\r\n                  <option>Select Continent</option>\r\n                    {data.continents.map((continent, index) => {\r\n                        return (\r\n                          <option key={index} value={continent.name}>{continent.name}</option>\r\n                        )})}\r\n                  </Form.Select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {data.continents.map((continent, index) => {\r\n          return (\r\n            <Accordion.Item eventKey={index}>\r\n              <Accordion.Header>{continent.name}</Accordion.Header>\r\n              <Accordion.Body>\r\n                <TableView tableData={continent.countries} />\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          );\r\n        })} \r\n      </Accordion>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}