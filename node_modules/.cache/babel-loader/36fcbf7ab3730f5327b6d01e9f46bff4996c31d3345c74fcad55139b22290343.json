{"ast":null,"code":"import _slicedToArray from \"C:/Users/Mobile Programming/Downloads/Dwellfi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _taggedTemplateLiteral from \"C:/Users/Mobile Programming/Downloads/Dwellfi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mobile Programming\\\\Downloads\\\\Dwellfi\\\\src\\\\continents.jsx\",\n  _templateObject,\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport TableView from \"./tableView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar LIST_CONTINENTS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query {\\n    continents {\\n      name\\n      countries {\\n        name\\n        languages {\\n          native\\n          name\\n          code\\n        }\\n        phones\\n        emoji\\n        capital\\n        currency\\n      }\\n    }\\n  }\\n\"])));\nexport default function ContinentList() {\n  _s();\n  var _this = this;\n  var _useQuery = useQuery(LIST_CONTINENTS),\n    data = _useQuery.data,\n    loading = _useQuery.loading,\n    error = _useQuery.error;\n  var _useState = useState('Select Continent'),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectContinent = _useState2[0],\n    setSelectContinent = _useState2[1];\n  if (loading || error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error ? error.message : \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  var handleContinentSelect = function handleContinentSelect(continent) {\n    console.log(continent);\n    setSelectContinent(continent);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: function onChange(e) {\n        return handleContinentSelect(e);\n      },\n      className: \"form-select\",\n      children: data.continents.map(function (continent, index) {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: continent.name,\n          children: continent.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: \"0\",\n      children: data.continents.map(function (continent, index) {\n        return /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: index,\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: continent.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: /*#__PURE__*/_jsxDEV(TableView, {\n              tableData: continent.countries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ContinentList, \"teHvSmRglY1ExU+i2UQ1ezAuOEk=\", false, function () {\n  return [useQuery];\n});\n_c = ContinentList;\nvar _c;\n$RefreshReg$(_c, \"ContinentList\");","map":{"version":3,"names":["React","useEffect","useRef","useState","gql","useQuery","Accordion","TableView","jsxDEV","_jsxDEV","Fragment","_Fragment","LIST_CONTINENTS","_templateObject","_taggedTemplateLiteral","ContinentList","_s","_this","_useQuery","data","loading","error","_useState","_useState2","_slicedToArray","selectContinent","setSelectContinent","children","message","fileName","_jsxFileName","lineNumber","columnNumber","handleContinentSelect","continent","console","log","onChange","e","className","continents","map","index","value","name","defaultActiveKey","Item","eventKey","Header","Body","tableData","countries","_c","$RefreshReg$"],"sources":["C:/Users/Mobile Programming/Downloads/Dwellfi/src/continents.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\n\r\n\r\nimport TableView from \"./tableView\";\r\nconst LIST_CONTINENTS = gql`\r\n  query {\r\n    continents {\r\n      name\r\n      countries {\r\n        name\r\n        languages {\r\n          native\r\n          name\r\n          code\r\n        }\r\n        phones\r\n        emoji\r\n        capital\r\n        currency\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ContinentList() {\r\n  const { data, loading, error } = useQuery(LIST_CONTINENTS);\r\n  const [selectContinent, setSelectContinent] = useState('Select Continent')\r\n\r\n  if (loading || error) {\r\n    return <p>{error ? error.message : \"Loading...\"}</p>;\r\n  }\r\n\r\n\r\n  const handleContinentSelect=(continent)=>{\r\n    console.log(continent)\r\n    setSelectContinent(continent)\r\n  }\r\n  return (\r\n    <>\r\n\r\n    <select onChange={(e)=>handleContinentSelect(e)} className=\"form-select\">\r\n        {data.continents.map((continent, index) => {\r\n          return (\r\n            <option key={index} value={continent.name}>{continent.name}</option>\r\n          )})}\r\n    </select>\r\n    \r\n\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {data.continents.map((continent, index) => {\r\n          return (\r\n            <Accordion.Item eventKey={index}>\r\n              <Accordion.Header>{continent.name}</Accordion.Header>\r\n              <Accordion.Body>\r\n                <TableView tableData={continent.countries} />\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          );\r\n        })}\r\n      </Accordion>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}